#!/usr/bin/env bash
# vim: ft=sh
set -e

function headIsDetached() {
    [[ $(git rev-parse --abbrev-ref --symbolic-full-name HEAD) == "HEAD" ]];
}

function fetchChanges() {
    # We cannot use "git pull" in here, because history may be changed upstream
    git fetch
    git reset --hard "origin/${BRANCH}"
}

function buildBinaries() {

    make -j{{ ansible_processor_vcpus }} update
    make -j{{ ansible_processor_vcpus }} nimbus \
        LOG_LEVEL="TRACE" NIMFLAGS="{{ nimbus_eth1_build_nim_flags | join(" ") }}"

    # Rename binaries to match commit they were built from.
    mv "build/nimbus_execution_client" "build/nimbus_execution_client_${COMMIT}"

    # Create a symbolic link to the latest version
    ln -frs build/nimbus_execution_client_${COMMIT} build/nimbus_execution_client

    # Delete copies that are older than N days
    find build -mtime +{{ nimbus_eth1_build_days_kept }} -exec rm '{}' \+
}

#-------------------------------------------------------------------------------

BRANCH="{{ nimbus_eth1_repo_branch }}"
SERVICE="{{ nimbus_eth1_service_name }}.service"
BUILD_DIR="{{ nimbus_eth1_repo_path }}"

if [[ "${USER}" != "{{ nimbus_eth1_service_user }}" ]]; then
    echo "Incorrect user: ${USER}" >&2
    echo "Expected: {{ nimbus_eth1_service_user }}" >&2
    exit 1
fi

# Build the Beacon node binaries
cd "${BUILD_DIR}"

# Detached HEAD means we're probably on a tag
if headIsDetached; then
    echo " >>> Detached HEAD, nothing to fetch."
else
    echo " >>> Fetching changes..."
    fetchChanges
fi

COMMIT=$(git rev-parse --short=8 HEAD)

echo " >>> Building binaries..."
buildBinaries

# Avoid failure on first Ansible run due to missing service.
if [[ $(systemctl is-active "${SERVICE}" || true) == "inactive" ]]; then
    echo " !!! No service to restart!"
    exit
else
    echo " >>> Restarting service..."
    sudo systemctl restart "${SERVICE}"
fi

echo " >>> SUCCESS"

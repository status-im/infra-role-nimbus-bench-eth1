---
- name: Symlink service logs folder
  file:
    src: '/var/log/service/{{ nimbus_eth1_service_name }}'
    dest: '{{ nimbus_eth1_logs_link }}'
    state: 'link'
    force: true

- name: Get current UTC timestamp
  command: date --utc +%FT%TZ
  register: current_timestamp
  changed_when: false

- name: Get git commit hash
  command: git show --format="%h" --no-patch
  args:
    chdir: '{{ nimbus_eth1_repo_path }}'
  become: true
  become_user: '{{ nimbus_eth1_service_user }}'
  register: git_hash
  changed_when: false

- name: Set benchmark filename
  set_fact:
    benchmark_file_name: '{{ current_timestamp.stdout }}-{{ git_hash.stdout }}.csv'

- name: Create systemd Unit file
  template:
    src: 'nimbus-eth1-{{ nimbus_eth1_benchmark_type }}-benchmark.service.j2'
    dest: '/etc/systemd/system/{{ nimbus_eth1_service_name }}.service'
    mode: 0644

- name: Create metrics github publish script
  template:
    src: 'publish-metrics-github.sh.j2'
    dest: '{{ nimbus_eth1_publish_script }}'
    owner: '{{ nimbus_eth1_service_user }}'
    group: '{{ nimbus_eth1_service_group }}'
    mode: 0775

- name: Reload systemctl
  command: systemctl daemon-reload

- name: Clean up existing DB
  block:
    - name: Remove existing DB directory
      file:
        path: '{{ nimbus_eth1_db_dir }}'
        state: absent
      become: true

- name: Create DB directory
  file:
    path: '{{ nimbus_eth1_db_dir }}'
    state: directory
    mode: '0755'
  become: true

- name: Copy template DB contents
  copy:
    src: '{{ nimbus_eth1_template_db }}/'
    dest: '{{ nimbus_eth1_db_dir }}'
    remote_src: true
  become: true

- name: Set ownership of DB directory and contents
  file:
    path: '{{ nimbus_eth1_db_dir }}'
    owner: '{{ nimbus_eth1_service_user }}'
    group: '{{ nimbus_eth1_service_group }}'
    recurse: yes
  become: true

- name: Restart the service
  service:
    name: '{{ nimbus_eth1_service_name }}.service'
    state: 'restarted'
    enabled: true
